initSidebarItems({"enum":[["ExitStatus","Coroutine exit status (value returned or panic)"],["Message","EventLoop message type"]],"fn":[["mailbox","Create a Mailbox"],["start","Shorthand for creating new `Mioco` instance and starting it right away."],["start_threads","Shorthand for creating new `Mioco` instance with a fixed number of threads and starting it right away."]],"mod":[["mio",""]],"struct":[["Config","Mioco builder"],["Coroutine","Mioco coroutine (a.k.a. *mioco handler*)"],["CoroutineControl","Coroutine control block"],["CoroutineHandle","Handle to spawned coroutine"],["CoroutineId","Id of a Coroutine used to enumerate them"],["Event","Event delivered to the coroutine"],["EventSource","Event source inside a coroutine"],["EventSourceId","Id of an event source used to enumerate them"],["Handler","Mioco event loop `Handler`"],["MailboxInnerEnd","Inner Mailbox End"],["MailboxOuterEnd","Outside Mailbox End"],["Mioco","Mioco instance"],["MiocoHandle","Mioco instance handle"],["Timer","A Timer generating event after a given time"]],"trait":[["Evented","`mioco` can work on any type implementing this trait"],["Scheduler","Coroutine Scheduler"],["SchedulerThread","Per-thread Scheduler"]]});